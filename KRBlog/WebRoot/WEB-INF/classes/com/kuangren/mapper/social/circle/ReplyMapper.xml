<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kuangren.mapper.social.circle.ReplyMapper" >
  <resultMap id="BaseResultMap" type="com.kuangren.po.reply.Reply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="isLeaf" property="isLeaf" jdbcType="BIT" />
    <result column="floor" property="floor" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="CHAR" />
    <result column="favor" property="favor" jdbcType="INTEGER" />
    <result column="trample" property="trample" jdbcType="INTEGER" />
    <result column="mark" property="mark" jdbcType="CHAR" />
    <result column="parent_id" property="parent_id" jdbcType="INTEGER" />
    <result column="user_id" property="user_id" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, content, createTime, status, isLeaf, floor, nickname, favor, trample, 
    mark, parent_id, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kuangren.po.reply.ReplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kuangren.po.reply.ReplyExample" >
    delete from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kuangren.po.reply.Reply" >
    insert into reply (id, title, content, 
      createTime, status, isLeaf, 
      floor, nickname, favor, 
      trample, mark, parent_id, 
      user_id)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{isLeaf,jdbcType=BIT}, 
      #{floor,jdbcType=INTEGER}, #{nickname,jdbcType=CHAR}, #{favor,jdbcType=INTEGER}, 
      #{trample,jdbcType=INTEGER}, #{mark,jdbcType=CHAR}, #{parent_id,jdbcType=INTEGER}, 
      #{user_id,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kuangren.po.reply.Reply" >
    insert into reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isLeaf != null" >
        isLeaf,
      </if>
      <if test="floor != null" >
        floor,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="favor != null" >
        favor,
      </if>
      <if test="trample != null" >
        trample,
      </if>
      <if test="mark != null" >
        mark,
      </if>
      <if test="parent_id != null" >
        parent_id,
      </if>
      <if test="user_id != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isLeaf != null" >
        #{isLeaf,jdbcType=BIT},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=CHAR},
      </if>
      <if test="favor != null" >
        #{favor,jdbcType=INTEGER},
      </if>
      <if test="trample != null" >
        #{trample,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=CHAR},
      </if>
      <if test="parent_id != null" >
        #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null" >
        #{user_id,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kuangren.po.reply.ReplyExample" resultType="java.lang.Integer" >
    select count(*) from reply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update reply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isLeaf != null" >
        isLeaf = #{record.isLeaf,jdbcType=BIT},
      </if>
      <if test="record.floor != null" >
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null" >
        nickname = #{record.nickname,jdbcType=CHAR},
      </if>
      <if test="record.favor != null" >
        favor = #{record.favor,jdbcType=INTEGER},
      </if>
      <if test="record.trample != null" >
        trample = #{record.trample,jdbcType=INTEGER},
      </if>
      <if test="record.mark != null" >
        mark = #{record.mark,jdbcType=CHAR},
      </if>
      <if test="record.parent_id != null" >
        parent_id = #{record.parent_id,jdbcType=INTEGER},
      </if>
      <if test="record.user_id != null" >
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update reply
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      isLeaf = #{record.isLeaf,jdbcType=BIT},
      floor = #{record.floor,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=CHAR},
      favor = #{record.favor,jdbcType=INTEGER},
      trample = #{record.trample,jdbcType=INTEGER},
      mark = #{record.mark,jdbcType=CHAR},
      parent_id = #{record.parent_id,jdbcType=INTEGER},
      user_id = #{record.user_id,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kuangren.po.reply.Reply" >
    update reply
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="isLeaf != null" >
        isLeaf = #{isLeaf,jdbcType=BIT},
      </if>
      <if test="floor != null" >
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=CHAR},
      </if>
      <if test="favor != null" >
        favor = #{favor,jdbcType=INTEGER},
      </if>
      <if test="trample != null" >
        trample = #{trample,jdbcType=INTEGER},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=CHAR},
      </if>
      <if test="parent_id != null" >
        parent_id = #{parent_id,jdbcType=INTEGER},
      </if>
      <if test="user_id != null" >
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kuangren.po.reply.Reply" >
    update reply
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      isLeaf = #{isLeaf,jdbcType=BIT},
      floor = #{floor,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=CHAR},
      favor = #{favor,jdbcType=INTEGER},
      trample = #{trample,jdbcType=INTEGER},
      mark = #{mark,jdbcType=CHAR},
      parent_id = #{parent_id,jdbcType=INTEGER},
      user_id = #{user_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>